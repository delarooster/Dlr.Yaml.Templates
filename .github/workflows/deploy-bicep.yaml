name: Deploy

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      bicepTemplatePath:
        description: "The path to the top-level bicep template, e.g. main.bicep"
        default: env/main.bicep
        type: string
      additionalBicepParameters:
        default: ""
        type: string
      clientAffix:
        required: true
        type: string
      env:
        default: Dv
        type: string
      resourceGroup:
        type: string
        required: true
      resourceGroupLocation:
        type: string
        default: "eastus"
      variablesYamlPath:
        type: string
        default: "./pipelines/variables.yaml"
      vmImage:
        type: string
        default: "ubuntu-latest"
    outputs:
      acrName:
        description: "Name of ACR"
        value: ${{ jobs.deploy-bicep.outputs.acrName }}

jobs:
  deploy-bicep:
    runs-on: ${{ inputs.vmImage }}
    defaults:
      run:
        shell: pwsh
    steps:
      # Checkout the repo
      - uses: actions/checkout@v2
      # Login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          # Credentials inherited from parent workflow
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Read YAML variables
        uses: pietrobolcato/action-read-yaml@1.0.0
        id: yaml-data
        with:
          config: ${{ inputs.variablesYamlPath }}

      - run: |
          az account show
          az group create --name ${{ inputs.resourceGroup }} --location ${{ inputs.resourceGroupLocation }}

      - name: Deploy Bicep Template
        id: bicep-deploy
        run: |
          az --version
          az deployment group create `
            --resource-group ${{ inputs.resourceGroup }} `
            --name azuredeploy-$($env:GITHUB_RUN_ATTEMPT) `
            --template-file ${{ inputs.bicepTemplatePath }} `
            --parameters `
              clientAffix=${{ steps.yaml-data.outputs['clientAffix'] }} `
              env=${{ steps.yaml-data.outputs['env'] }} `
              projectAffix=${{ steps.yaml-data.outputs['projectAffix'] }} `
              ${{ inputs.additionalBicepParameters }}

      - name: "Capture Bicep Outputs"
        id: bicep-outputs
        run: |
          $out = az deployment group show -g ${{ inputs.resourceGroup }} -n "azuredeploy-$($env:GITHUB_RUN_ATTEMPT)" | convertfrom-json | foreach properties | foreach outputs
          mkdir bicep-outputs
          if($out -ne $null)
          {
              $provisionOutputs = [PSCustomObject]@{}
              $out | Get-Member -MemberType NoteProperty | ForEach-Object {
                $name = $_.name
                $provisionOutputs | Add-Member -MemberType NoteProperty -Name $name -value $out.$name.value
                Write-Host "BICEP output key/value -> $($name): $($out.$name.value)"
                Set-Content -Path bicep-outputs/$($name) -Value $($out.$name.value)
              }
          }
          else {
              Write-Host "BICEP outputs are null"
          }

      - uses: actions/upload-artifact@v3
        with:
          name: bicep-outputs
          path: bicep-outputs/
