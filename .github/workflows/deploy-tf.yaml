name: Deploy Terraform

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      additionalTerraformParameters:
        default: ""
        type: string
      resourceGroup:
        type: string
        required: true
      resourceGroupLocation:
        type: string
        default: "eastus"
      targetEnvironment:
        default: Dv
        type: string
      terraformVersion:
        type: string
        default: 1.5.7
      variablesYamlPath:
        type: string
        default: "./pipelines/variables.yaml"
      vmImage:
        type: string
        default: "ubuntu-latest"
      workingDirectory:
        description: "The path to the intended workspace, e.g. main.tf"
        default: ./env
        type: string

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate.
env:
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"

jobs:
  deploy-terraform:
    name: "Deploy Terraform"
    runs-on: ${{ inputs.vmImage}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: terraform-plans
          path: terraform-plans

      # TODO fix hardcoded state file key name below
      - name: Terraform Init
        id: init
        env:
          ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
          ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
          ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
          ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
        run: |
          terraform init -backend-config="resource_group_name=$RESOURCE_GROUP" \
            -backend-config="storage_account_name=$STORAGE_ACCOUNT" \
            -backend-config="container_name=$CONTAINER_NAME" \
            -backend-config="key=dvgithubstatefiles"
        working-directory: ${{ inputs.workingDirectory }}

      - run: |
          echo "dir"
          ls -la

          echo "terraform plan dir"
          cd terraform-plans 
          ls -la
        name: Debugging Logs

      - name: Terraform Apply
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve terraform-plans/${{ inputs.targetEnvironment }}.tfplan
        working-directory: ${{ inputs.workingDirectory }}
