
name: build node


on:
  push:
  workflow_call:
    inputs:
      NODEVERSION:
        type: string
        default: $NODEVERSION
      workingDirectory:
        type: string
        default: node-example


jobs:
  build-node:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # We can capture defaults using the below code. the := checks if the variable is null or empty and sets it if it is
      # This entire step can be omitted if we are only using workflow_call or workflow_dispatch
      - name: capture default variables
        id: defaults
        run: |
          NODEVERSION=${{ inputs.nodeVersion }}
          TEMP_NODEVERSION=${NODEVERSION:='16.x'}

          WORKINGDIRECTORY=${{ inputs.workingDirectory }}
          TEMP_WORKINGDIRECTORY=${WORKINGDIRECTORY:='node-example'}

          echo "nodeVersion=${TEMP_NODEVERSION}" >> $GITHUB_OUTPUT
          echo "workingDirectory=${TEMP_WORKINGDIRECTORY}" >> $GITHUB_OUTPUT

      - name: Use Node.js ${{ steps.defaults.outputs.nodeVersion }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.defaults.outputs.nodeVersion }}
      
      - name: npm install
        run: |
          echo "the nodeVersion is ${{ steps.defaults.outputs.nodeVersion }} and the working directory is ${{ steps.defaults.outputs.workingDirectory }}"
          cd ${{ steps.defaults.outputs.workingDirectory }}
          npm ci
      
      - name: npm test
        run: |
          cd ${{ steps.defaults.outputs.workingDirectory }}
          npm test
      
      - name: display artifact
        run: |
          cd node-example
          ls -lsa